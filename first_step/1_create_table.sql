-- 1) roles
CREATE TABLE roles (
    role_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name VARCHAR2(50) NOT NULL
);

-- 2) users
CREATE TABLE users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_role INTEGER NOT NULL,
    user_name VARCHAR2(100) UNIQUE NOT NULL,
    user_email VARCHAR2(100) NOT NULL,
    user_password VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_user_role FOREIGN KEY (user_role) 
        REFERENCES roles(role_id) ON DELETE CASCADE
);

-- 3) artists
CREATE TABLE artists (
    artist_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    artist_name VARCHAR2(100) NOT NULL,
    artist_description VARCHAR2(500)
);

-- 4) genres
CREATE TABLE genres (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR2(50) NOT NULL
);

-- 5) songs
CREATE TABLE songs (
    song_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    song_title VARCHAR2(200) NOT NULL,
    genre_id INTEGER NOT NULL,
    artist_id INTEGER NOT NULL,
    song_path VARCHAR2(500) NOT NULL,
    added_date DATE NOT NULL,
    CONSTRAINT fk_song_genre FOREIGN KEY (genre_id) 
        REFERENCES genres (genre_id) ON DELETE CASCADE,
    CONSTRAINT fk_song_artist FOREIGN KEY (artist_id) 
        REFERENCES artists (artist_id) ON DELETE CASCADE
);

-- 6) playlists (с добавлением внешнего ключа для связи с пользователями)
CREATE TABLE playlists (
    playlist_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    playlist_name VARCHAR2(100) NOT NULL,
    user_id INTEGER NOT NULL,  -- добавляем связь с пользователем
    CONSTRAINT fk_playlist_user FOREIGN KEY (user_id) 
        REFERENCES users(user_id) ON DELETE CASCADE  -- внешний ключ на пользователя
);

-- 7) playlist_song (с добавленным id)
CREATE TABLE playlist_song (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  -- новый столбец id
    playlist_id INTEGER NOT NULL,
    song_id INTEGER NOT NULL,
    CONSTRAINT fk_playlist FOREIGN KEY (playlist_id) 
        REFERENCES playlists(playlist_id) ON DELETE CASCADE,
    CONSTRAINT fk_song FOREIGN KEY (song_id) 
        REFERENCES songs(song_id) ON DELETE CASCADE
);